# prefix
unbind C-b
set -g prefix C-s

# housekeeping
set-option -g default-terminal "screen-256color"
set -g history-limit 10000
set -g status-bg "#666666"
set -g status-fg "#aaaaaa"
set -g status-left-length 50
set -g status-right '#( )'
set -g base-index 1
set -g renumber-windows on
set -g mouse on
set -sg escape-time 0


# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# New split panes
bind-key - split-pane -v -c '#{pane_current_path}'
bind-key v split-pane -h -c '#{pane_current_path}'

# New window/tab
bind-key t new-window -c '#{pane_current_path}'

# Source the tmux conf
bind-key s source-file ~/.tmux.conf \; display-message "tmux conf reloaded"

# Background the selected pane to a new tmux tab
bind-key b break-pane -d

# Opens the tmux conf in a new pane. Pane closes when the vim process is killed.
bind-key T split-window -h "vim ~/.tmux.conf"

# Kill session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Vim keybindings for copy mode.
set-window-option -g mode-keys vi
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'V' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key o copy-mode

# This makes it so that a tmux split pane containing Vim split-panes respects the heirarchy of Ctrl-<key> movement.
# In other words, use <C> - hjkl to move around panes even with vim panes open. Note this may cause weirdness if you use Vim's own split panes.
# I just open a new vim process in a tmux pane rather than using vim splits.
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|neovim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Plugins
## Plugin manager
set -g @plugin 'tmux-plugins/tpm'

## status bar
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'kristijanhusak/tmux-simple-git-status'
## fuzzy search current pane
set -g @plugin 'laktak/extrakto'
## saves/loads tmux sessions (persists pane layout and files after restart)
set -g @plugin 'tmux-plugins/tmux-resurrect'
## automatically saves tmux sessions. works as an extension of resurrect
set -g @plugin 'tmux-plugins/tmux-continuum'
## regex search active tmux pane
set -g @plugin 'tmux-plugins/tmux-copycat'
## yanks to system clipboard, or pastes selection directly to command line
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'

# Plugin configuration
set -g status-left "#{simple_git_status}"
set -g status-right 'CPU: #{cpu_icon} #{cpu_percentage} Batt: #{battery_percentage} | %a %h-%d %H:%M '
set -g @extrakto_key 'tab'
set -g @extrakto_grab_area 'full'
set -g @resurrect-save '['
set -g @resurrect-restore ']'
set -g @resurrect-processes 'ssh psql mysql irb pry "~rails server" "~rails console" "~mix phx.server"'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
run -b '~/.tmux/plugins/tpm/tpm'
